import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c as o,d as n,a as e,b as a,e as s,r as c}from"./app.1350f104.js";const i={},u=a(`<h2 id="_4-1-\u4E32\u7684\u5B9A\u4E49\u548C\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-1-\u4E32\u7684\u5B9A\u4E49\u548C\u5B9E\u73B0" aria-hidden="true">#</a> 4.1 \u4E32\u7684\u5B9A\u4E49\u548C\u5B9E\u73B0</h2><h3 id="_1-\u4EC0\u4E48\u662F\u4E32" tabindex="-1"><a class="header-anchor" href="#_1-\u4EC0\u4E48\u662F\u4E32" aria-hidden="true">#</a> 1.\u4EC0\u4E48\u662F\u4E32</h3><p>\u5B57\u7B26\u4E32\uFF0C\u7B80\u79F0\u4E32\uFF0C\u5728 c++\u8BED\u8A00\u4E2D\u4F7F\u7528\u5173\u952E\u5B57 string \u6765\u5B9A\u4E49</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>string a <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-\u4E32\u7684\u5B58\u50A8\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_2-\u4E32\u7684\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a> 2.\u4E32\u7684\u5B58\u50A8\u7ED3\u6784</h3><ul><li>1.\u5B9A\u957F\u987A\u5E8F\u5B58\u50A8\u8868\u793A\uFF08\u672C\u8D28\u4E0A\u5C31\u662F\u5B57\u7B26\u6570\u7EC4\uFF09</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXLEN</span> <span class="token expression"><span class="token number">255</span></span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> ch<span class="token punctuation">[</span>MAXLEN <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u822C\u4E0B\u6807\u4ECE1\u5F00\u59CB\uFF0C0\u4E0D\u7528\uFF0C\u8FD9\u6837\u53EF\u4EE5\u7B80\u4FBF\u4E00\u4E9B\u7B97\u6CD5</span>
    <span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span> SString<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u4E32\u7684\u5B9E\u9645\u957F\u5EA6\u53EA\u80FD\u5C0F\u4E8E\u7B49\u4E8E MAXLEN\uFF0C\u8D85\u8FC7\u9884\u5B9A\u4E49\u957F\u5EA6\u7684\u4E32\u503C\u4F1A\u88AB\u820D\u53BB\uFF0C\u79F0\u4E3A\u622A\u65AD</p></blockquote><ul><li>2.\u5806\u5206\u914D\u5B58\u50A8\u8868\u793A</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>ch<span class="token punctuation">;</span>
    <span class="token keyword">int</span> length<span class="token punctuation">;</span>
<span class="token punctuation">}</span> HString
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3.\u5757\u94FE\u5B58\u50A8\u8868\u793A</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">CHUNKSIZE</span> <span class="token expression"><span class="token number">80</span>       </span><span class="token comment">// \u5757\u7684\u5927\u5C0F\u53EF\u7531\u7528\u6237\u81EA\u5B9A\u4E49</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">Chunk</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> ch<span class="token punctuation">[</span>CHUNKSIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// \u79F0\u4E3A\u5757</span>
    <span class="token keyword">struct</span> <span class="token class-name">Chunk</span><span class="token operator">*</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> Chunk<span class="token punctuation">;</span>

<span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>
    Chunk <span class="token operator">*</span>head<span class="token punctuation">,</span> <span class="token operator">*</span>tail<span class="token punctuation">;</span>    <span class="token comment">// \u4E32\u7684\u5934\u6307\u9488\u548C\u5C3E\u6307\u9488</span>
    <span class="token keyword">int</span> curlen             <span class="token comment">// \u4E32\u7684\u5F53\u524D\u957F\u5EA6</span>
<span class="token punctuation">}</span>LString<span class="token punctuation">;</span>                   <span class="token comment">// \u5B57\u7B26\u4E32\u7684\u5757\u94FE\u7ED3\u6784</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u4E32\u7684\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-\u4E32\u7684\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> 3.\u4E32\u7684\u57FA\u672C\u64CD\u4F5C</h3>`,13),r=n("li",null,"\u4E32\u7684\u57FA\u672C\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u770B\u4E0B\u9762\u4E24\u4E2A\u94FE\u63A5",-1),k=s("\u4E3B\u8981\u5305\u62EC\u6784\u9020\u3001\u9500\u6BC1\u3001\u6E05\u7A7A\u3001\u6C42\u4E32\u957F\u3001\u6C42\u5B57\u4E32\u7B49 "),d={href:"https://cplusplus.com/reference/cstring/",target:"_blank",rel:"noopener noreferrer"},m=s('"c \u8BED\u8A00\u7684\u5E93cstring"'),v={href:"https://cplusplus.com/reference/string/string/",target:"_blank",rel:"noopener noreferrer"},h=s('"c++\u7684\u5E93string"'),b=a(`<ul><li>\u4E32\u7684\u57FA\u672C\u64CD\u4F5C <ul><li>StrAssign(&amp;T, chars)\uFF1A\u4E32\u8D4B\u503C</li><li>StrCompare(S, T)\uFF1A\u4E32\u6BD4\u8F83</li><li>StrLength(S)\uFF1A\u6C42\u4E32\u957F</li><li>Concat(&amp;T, S1, S2)\uFF1A\u4E32\u8FDE\u7ED3</li><li>SubString(&amp;Sub, S, pos, len)\uFF1A\u6C42\u5B50\u4E32</li><li>StrCopy(&amp;T, S)\uFF1A\u4E32\u62F7\u8D1D</li><li>StrEmpty(S)\uFF1A\u4E32\u5224\u7A7A</li><li>ClearString(&amp;S)\uFF1A\u6E05\u7A7A\u4E32</li><li>Index(S,T,pos)\uFF1A\u5B50\u4E32\u7684\u4F4D\u7F6E</li><li>Repalce(&amp;S, T, V)\uFF1A\u4E32\u66FF\u6362</li><li>StrInsert(&amp;S, pos, T)\uFF1A\u5B50\u4E32\u63D2\u5165</li><li>StrDelete(&amp;S, pos, len)\uFF1A\u5B50\u4E32\u5220\u9664</li><li>DestoryString(&amp;S)\uFF1A\u4E32\u9500\u6BC1</li></ul></li></ul><h2 id="_4-2-\u4E32\u7684\u5339\u914D\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-2-\u4E32\u7684\u5339\u914D\u6A21\u5F0F" aria-hidden="true">#</a> 4.2 \u4E32\u7684\u5339\u914D\u6A21\u5F0F</h2><h3 id="_1-\u7B80\u5355\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5-bf-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u5355\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5-bf-\u7B97\u6CD5" aria-hidden="true">#</a> 1.\u7B80\u5355\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5--BF \u7B97\u6CD5</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">Index_BF</span><span class="token punctuation">(</span>SString S<span class="token punctuation">,</span> SString T<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> pos<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> S<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> T<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>S<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6BD4\u8F83\u6210\u529F\u5219\u7EE7\u7EED\u5339\u914D\u4E0B\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>       <span class="token comment">//\u4E3B\u4E32\u6BD4\u8F83\u4F4D\u7F6E S--&gt;i</span>
    j<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">//\u5B57\u4E32\u6BD4\u8F83\u4F4D\u7F6E T--&gt;j</span>
    <span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u6BD4\u8F83\u4E0D\u6210\u529F\u5219\u56DE\u6EAF</span>
    i <span class="token operator">=</span> i <span class="token operator">-</span> j <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
    j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> T<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  
    <span class="token keyword">return</span>  i <span class="token operator">-</span> T<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token comment">// \u770B\u4E0B\u6587\u6CE8\u91CA</span>
<span class="token keyword">else</span> 
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
j &gt;= T.length \u662F\u9519\u8BEF\u7684\uFF0C\u4E3E\u4E2A\u53CD\u4F8B\uFF1A
S = {&quot;abcdef&quot;}; T = {&quot;fg&quot;}
when i = 6;
S.ch[i] = T.ch[j] = &#39;f&#39;;
Then i=7; j=2;
\u6B64\u65F6\u4E0D\u7B26\u5408\u5FAA\u73AF\u6761\u4EF6\u8DF3\u51FA\u3002\u660E\u663Ej = 2\u5339\u914D\u6210\u529F\u4E86
*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g=n("blockquote",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(mn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"mn"),n("span",{class:"mclose"},")")])])])])],-1),y=a(`<h3 id="_2-\u6539\u8FDB\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5-kmp-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u6539\u8FDB\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5-kmp-\u7B97\u6CD5" aria-hidden="true">#</a> 2.\u6539\u8FDB\u7684\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5--KMP \u7B97\u6CD5</h3><ul><li><p>1.\u6982\u5FF5</p><ul><li>\u524D\u7F00\uFF1A\u9664\u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u5916\uFF0C\u5B57\u7B26\u4E32\u6240\u6709\u7684\u5934\u90E8\u5B57\u4E32</li><li>\u540E\u7F00\uFF1A\u9664\u7B2C\u4E00\u4E2A\u5B57\u7B26\u5916\uFF0C\u5B57\u7B26\u4E32\u6240\u6709\u7684\u5C3E\u90E8\u5B57\u4E32</li><li>\u90E8\u5206\u5339\u914D\u503C\uFF1A\u5B57\u7B26\u4E32\u7684\u524D\u540E\u7F00\u7684\u6700\u957F\u76F8\u7B49\u524D\u540E\u7F00\u957F\u5EA6</li></ul></li><li><p>2.\u4E3B\u51FD\u6570</p></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">Index_KMP</span><span class="token punctuation">(</span>SString S<span class="token punctuation">,</span> SString T<span class="token punctuation">,</span> <span class="token keyword">int</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> pos<span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> S<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> T<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> S<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// j == 0\u6216\u8005\u6BD4\u8F83\u6210\u529F\u5219\u7EE7\u7EED\u5339\u914D\u4E0B\u4E00\u4E2A\u5B57\u7B26\u4E32</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>
    j<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
    j <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token comment">// \u6BD4\u8F83\u4E0D\u6210\u529F\u5219\u56DE\u6EAF</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> T<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token keyword">return</span>  i <span class="token operator">-</span> T<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  <span class="token comment">// \u770B\u4E0B\u6587\u6CE8\u91CA</span>
<span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>3.\u83B7\u5F97next\u51FD\u6570</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Get_next</span><span class="token punctuation">(</span>SString T<span class="token punctuation">,</span> <span class="token keyword">int</span> nextval<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
nextval<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> next<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>j<span class="token punctuation">;</span>
    <span class="token keyword">else</span> next<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> j <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u9690\u542B\u7740\u975E\u5E38\u5389\u5BB3\u7684\u9012\u5F52\u601D\u60F3</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),w=n("blockquote",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"+"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m+n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u5176\u4E2D"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mclose"},")")])])]),s(" \u6765\u81EA\u4E8E\u6C42next\u6570\u7EC4\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \u6765\u81EAKMP\u7B97\u6CD5\u7684\u91CC\u5C42\u5FAA\u73AF\uFF08\u666E\u901A\u6A21\u5F0F\u5339\u914D\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(mn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"mn"),n("span",{class:"mclose"},")")])])])])],-1),x=a(`<h3 id="_3-exp-ababa" tabindex="-1"><a class="header-anchor" href="#_3-exp-ababa" aria-hidden="true">#</a> 3.EXP &#39;ababa&#39;</h3><ul><li>\u90E8\u5206\u5339\u914D\u503C <ul><li>&#39;a&#39;--&gt; 0</li><li>&#39;ab&#39;--&gt; 0</li><li>&#39;aba&#39;--&gt; 1</li><li>&#39;abab&#39;--&gt; 2</li><li>&#39;ababa&#39;--&gt; 3</li></ul></li><li>next\u6570\u7EC4 <ul><li>\u53F3\u79FB\u4E00\u4F4D\uFF0C\u9996\u4F4D-1\uFF0C\u672B\u4F4D\u6EA2\u51FA <ul><li>-1 0 0 1 2</li></ul></li></ul></li><li>\u7B80\u6D01next\u6570\u7EC4 <ul><li>\u5404\u4F4D+1 <ul><li>0 1 1 2 3</li></ul></li></ul></li></ul><h3 id="_4-kmp-\u7B97\u6CD5\u7684\u8FDB\u4E00\u6B65\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#_4-kmp-\u7B97\u6CD5\u7684\u8FDB\u4E00\u6B65\u4F18\u5316" aria-hidden="true">#</a> 4.KMP \u7B97\u6CD5\u7684\u8FDB\u4E00\u6B65\u4F18\u5316</h3><ul><li>\u518D\u6B21\u9012\u5F52\uFF0C\u5C06 next[j] \u4FEE\u6B63\u4E3A next[next[j]]</li><li>\u83B7\u5F97 nextval \u51FD\u6570</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Get_next</span><span class="token punctuation">(</span>SString T<span class="token punctuation">,</span> <span class="token keyword">int</span> nextval<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
nextval<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> T<span class="token punctuation">.</span>ch<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> nextval<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>
    <span class="token keyword">else</span> nextval<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nextval<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> j <span class="token operator">=</span> nextval<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u9690\u542B\u7740\u975E\u5E38\u5389\u5BB3\u7684\u9012\u5F52\u601D\u60F3</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function _(f,S){const t=c("ExternalLinkIcon");return l(),o("div",null,[u,n("ul",null,[r,n("li",null,[k,n("a",d,[m,e(t)])])]),n("p",null,[n("a",v,[h,e(t)])]),b,g,y,w,x])}var M=p(i,[["render",_],["__file","04.html.vue"]]);export{M as default};
