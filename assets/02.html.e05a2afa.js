import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o as l,c as p,d as s,a as o,b as a,e as n,r as c}from"./app.3314798f.js";const i={},r=a('<h2 id="_2-1-\u7EBF\u6027\u8868\u7684\u5B9A\u4E49\u548C\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_2-1-\u7EBF\u6027\u8868\u7684\u5B9A\u4E49\u548C\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> 2.1 \u7EBF\u6027\u8868\u7684\u5B9A\u4E49\u548C\u57FA\u672C\u64CD\u4F5C</h2><h3 id="\u4EC0\u4E48\u662F\u7EBF\u6027\u8868-\u{1F914}" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u7EBF\u6027\u8868-\u{1F914}" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u7EBF\u6027\u8868\uFF1F\u{1F914}</h3><p>\u6709\u70B9\u50CF\u51FD\u6570</p><p>\u51FD\u6570\uFF1A\u4E00\u4E2A x \u503C\u53EA\u80FD\u5BF9\u5E94\u4E00\u4E2A y \u503C \u7EBF\u6027\u8868\uFF1A\u4E00\u4E2A\u7D22\u5F15\u503C\u53EA\u80FD\u6709\u4E00\u4E2A\u6620\u5C04\u503C</p><h3 id="\u7EBF\u6027\u8868\u7684\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u8868\u7684\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> \u7EBF\u6027\u8868\u7684\u57FA\u672C\u64CD\u4F5C</h3>',5),m=n("\u8BE6\u7EC6\u6587\u6863\u53EF\u4EE5\u53C2\u8003 c++\u5BB9\u5668"),u={href:"https://cplusplus.com/reference/list/list/",target:"_blank",rel:"noopener noreferrer"},d=n("list \u7684\u76F8\u5173\u51FD\u6570"),k=a('<p><a href="../code/2.1.list.cpp">c++\u4EE3\u7801\u793A\u4F8B</a></p><ul><li>\u521D\u59CB\u5316 \u6784\u9020\u5668 constructor</li><li>\u6C42\u8868\u957F length()\u6216 size()</li><li>\u6E05\u7A7A empty()</li><li>\u83B7\u53D6\u5143\u7D20</li><li>\u63D2\u5165</li><li>\u5220\u9664</li><li>...</li></ul><h2 id="_2-2-\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u8868\u793A" tabindex="-1"><a class="header-anchor" href="#_2-2-\u7EBF\u6027\u8868\u7684\u987A\u5E8F\u8868\u793A" aria-hidden="true">#</a> 2.2 \u7EBF\u6027\u8868\u7684\u987A\u5E8F\u8868\u793A</h2><h3 id="\u987A\u5E8F\u8868\u7684\u5B9A\u4E49-sequence-list" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u8868\u7684\u5B9A\u4E49-sequence-list" aria-hidden="true">#</a> \u987A\u5E8F\u8868\u7684\u5B9A\u4E49 Sequence List</h3><ul><li><p><em>\u7EBF\u6027\u8868</em>\u7684\u987A\u5E8F\u5B58\u50A8 -&gt; \u987A\u5E8F\u8868</p></li><li><p>\u987A\u5E8F\u8868\u7684\u7279\u70B9\u662F\u8868\u4E2D\u5143\u7D20\u7684\u903B\u8F91\u987A\u5E8F\u4E0E\u5176\u7269\u7406\u987A\u5E8F\u76F8\u540C</p></li><li><p>\u987A\u5E8F\u8868\u7684\u7ED3\u6784\u7C7B\u578B\u5B9A\u4E49</p><ul><li>\u9759\u6001\u5206\u914D</li><li>\u52A8\u6001\u5206\u914D</li><li>C \u7684\u52A8\u6001\u5206\u914D\u8BED\u53E5</li><li><code>L.data = (ElemType*)malloc(sizeof(ElemType)*InitSize;</code></li><li>C++\u7684\u52A8\u6001\u5206\u914D\u8BED\u53E5</li><li><code>L.data = new ElemType[InitSize];</code></li></ul></li></ul><h3 id="\u987A\u5E8F\u8868\u4E0A\u57FA\u672C\u64CD\u4F5C\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u987A\u5E8F\u8868\u4E0A\u57FA\u672C\u64CD\u4F5C\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u987A\u5E8F\u8868\u4E0A\u57FA\u672C\u64CD\u4F5C\u7684\u5B9E\u73B0</h3>',6),h=s("ul",null,[s("li",null,[n("\u63D2\u5165\u64CD\u4F5C "),s("ul",null,[s("li",null,[n("\u6700\u597D\u60C5\u51B5\uFF1A\u8868\u5C3E\u63D2\u5165\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u6700\u574F\u60C5\u51B5\uFF1A\u8868\u5934\u63D2\u5165\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),g=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u63D2\u5165\u64CD\u4F5C\u4EE3\u7801</span>
<span class="token keyword">bool</span> <span class="token function">ListInsert</span><span class="token punctuation">(</span>SqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> i <span class="token operator">&gt;</span> L<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">)</span>          <span class="token comment">// i\u503C\u4E0D\u5408\u6CD5</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>L<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> MAXSIZE<span class="token punctuation">)</span>            <span class="token comment">// \u5F53\u524D\u5B58\u50A8\u7A7A\u95F4\u5DF2\u6EE1</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> L<span class="token punctuation">.</span>length <span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> i <span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span>
        L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment">// \u63D2\u5165\u4F4D\u7F6E\u53CA\u4E4B\u540E\u4F4D\u7F6E\u540E\u79FB</span>
    L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>                       <span class="token comment">// \u5C06\u65B0\u5143\u7D20\u653E\u5165\u7B2Ci\u4E2A\u4F4D\u7F6E</span>
    L<span class="token punctuation">.</span>length<span class="token operator">++</span><span class="token punctuation">;</span>                              <span class="token comment">//\u8868\u957F\u589E\u52A01</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),v=s("ul",null,[s("li",null,[n("\u5220\u9664\u64CD\u4F5C "),s("ul",null,[s("li",null,[n("\u6700\u597D\u60C5\u51B5\uFF1A\u5220\u9664\u8868\u5C3E\u5143\u7D20\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u6700\u574F\u60C5\u51B5\uFF1A\u5220\u9664\u8868\u5934\u5143\u7D20\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u5E73\u5747\u60C5\u51B5\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"E"),s("mrow",null,[s("mi",null,"d"),s("mi",null,"e"),s("mi",null,"l")])]),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"n")]),s("msubsup",null,[s("mo",null,"\u2211"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"n")]),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"\u2212"),s("mi",null,"i"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"n")]),s("mfrac",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mi",null,"n")]),s("mn",null,"2")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1")]),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"E_{del} = \\frac 1n \\sum^n_{i=1}(n-i)=\\frac 1n \\frac {(n-1)n}2 = \\frac{n-1}2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"E"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0576em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"\u2211"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8043em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.355em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.01em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.485em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")"),s("span",{class:"mord mathnormal mtight"},"n")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])]),n(" \uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),y=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u5220\u9664\u64CD\u4F5C\u4EE3\u7801</span>
<span class="token keyword">bool</span> <span class="token function">ListDelete</span><span class="token punctuation">(</span>SqList<span class="token operator">&amp;</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> i <span class="token operator">&gt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">)</span>             <span class="token comment">// \u5224\u65ADi\u503C\u662F\u5426\u5408\u7406</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    e <span class="token operator">=</span> L<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> L<span class="token punctuation">.</span>elem<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    L<span class="token punctuation">.</span>length<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=s("ul",null,[s("li",null,[n("\u6309\u503C\u67E5\u627E\uFF08\u987A\u5E8F\u67E5\u627E\uFF09 "),s("ul",null,[s("li",null,[n("\u6700\u597D\u60C5\u51B5\uFF1A\u67E5\u627E\u7684\u5143\u7D20\u5C31\u5728\u8868\u5934\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u6700\u574F\u60C5\u51B5\uFF1A\u67E5\u627E\u7684\u5143\u7D20\u5728\u8868\u5C3E\uFF08\u6216\u4E0D\u5B58\u5728\uFF09\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u5E73\u5747\u60C5\u51B5\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"E"),s("mrow",null,[s("mi",null,"f"),s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"d")])]),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"n")]),s("msubsup",null,[s("mo",null,"\u2211"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"n")]),s("mi",null,"i"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1")]),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"E_{find} = \\frac 1n \\sum^n_{i=1}i= \\frac{n+1}2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"E"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0576em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal mtight"},"in"),s("span",{class:"mord mathnormal mtight"},"d")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"\u2211"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8043em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1901em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8451em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])]),n(" \uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),w=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u6309\u503C\u67E5\u627E\uFF08\u987A\u5E8F\u67E5\u627E\uFF09\u4EE3\u7801</span>
<span class="token keyword">int</span> <span class="token function">LocateElem</span><span class="token punctuation">(</span>SqList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> L<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// TODO</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E60\u9898" tabindex="-1"><a class="header-anchor" href="#\u4E60\u9898" aria-hidden="true">#</a> \u4E60\u9898</h3><h2 id="_2-3-\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u8868\u793A" tabindex="-1"><a class="header-anchor" href="#_2-3-\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u8868\u793A" aria-hidden="true">#</a> 2.3 \u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u8868\u793A</h2><h3 id="\u5355\u94FE\u8868\u7684\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5355\u94FE\u8868\u7684\u5B9A\u4E49" aria-hidden="true">#</a> \u5355\u94FE\u8868\u7684\u5B9A\u4E49</h3><ul><li><p>\u7EBF\u6027\u8868\u7684\u94FE\u5F0F\u5B58\u50A8\u53C8\u79F0\u5355\u94FE\u8868</p></li><li><p>\u7ED3\u70B9\u7684\u7C7B\u578B\u5B9A\u4E49</p></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">LNode</span><span class="token punctuation">{</span>     <span class="token comment">// \u58F0\u660E\u7ED3\u70B9\u7684\u7C7B\u578B\u548C\u6307\u5411\u7ED3\u70B9\u7684\u6307\u9488\u7C7B\u578B</span>
  ElemType data<span class="token punctuation">;</span>        <span class="token comment">//\u7ED3\u70B9\u7684\u6570\u636E\u57DF</span>
  <span class="token keyword">struct</span> <span class="token class-name">LNode</span> <span class="token operator">*</span>next<span class="token punctuation">;</span>   <span class="token comment">// \u7ED3\u70B9\u7684\u6307\u9488\u57DF</span>
<span class="token punctuation">}</span>LNode<span class="token punctuation">,</span><span class="token operator">*</span>LinkList<span class="token punctuation">;</span>         <span class="token comment">// LinkList\u4E3A\u6307\u5411\u7ED3\u6784\u4F53LNode\u7684\u6307\u9488\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),x=s("ul",null,[s("li",null,[s("p",null,"\u901A\u5E38\u7528\u5934\u6307\u9488\u6765\u8868\u793A\u4E00\u4E2A\u5355\u94FE\u8868")]),s("li",null,[s("p",null,"\u5355\u94FE\u8868\u4E0A\u57FA\u672C\u64CD\u4F5C\u7684\u5B9E\u73B0")]),s("li",null,[s("p",null,"\u91C7\u7528\u5934\u63D2\u6CD5\u5EFA\u7ACB\u5355\u94FE\u8868"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),L=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">CreateList_Head</span><span class="token punctuation">(</span>LinkList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
    L <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span>
    L<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">//L\u6307\u5411\u5934\u7ED3\u70B9\uFF0C\u5934\u7ED3\u70B9\u6307\u5411NULL\u6307\u9488</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    p <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> p<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
    p<span class="token operator">-&gt;</span>next <span class="token operator">=</span> L<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
      L<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f=s("ul",null,[s("li",null,[s("p",null,"\u91C7\u7528\u5C3E\u63D2\u6CD5\u5EFA\u7ACB\u5355\u94FE\u8868"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),_=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">CreateList_Tail</span><span class="token punctuation">(</span>LinkList<span class="token operator">&amp;</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  L <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span> 
  L<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
  LNode<span class="token operator">*</span> r<span class="token punctuation">;</span>
  LNode<span class="token operator">*</span> p<span class="token punctuation">;</span>
  r <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span> r <span class="token operator">=</span> L<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span> p<span class="token operator">-&gt;</span>next <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> p<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
    r<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
    r <span class="token operator">=</span> p<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),O=s("ul",null,[s("li",null,[s("p",null,"\u6309\u5E8F\u53F7\u67E5\u627E\u7ED3\u70B9\u503C"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),z=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>Status <span class="token function">GetElem_L</span><span class="token punctuation">(</span>LinkList L<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType <span class="token operator">&amp;</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>
  LNode<span class="token operator">*</span> p <span class="token operator">=</span> L<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> L<span class="token punctuation">;</span>       <span class="token comment">// \u82E5i\u7B49\u4E8E0\uFF0C\u5219\u8FD4\u56DE\u5934\u7ED3\u70B9</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>     <span class="token comment">// \u82E5i\u65E0\u6548\uFF0C\u5219\u8FD4\u56DE\u5934\u7ED3\u70B9</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
    p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    j<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  e <span class="token operator">=</span> p<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
  <span class="token keyword">return</span> OK<span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),M=s("ul",null,[s("li",null,[s("p",null,"\u6309\u503C\u67E5\u627E\u8868\u7ED3\u70B9"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),N=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">LocateElem_L_return_num</span><span class="token punctuation">(</span>LinkList L<span class="token punctuation">,</span>ElemType e<span class="token punctuation">)</span><span class="token punctuation">{</span>
  LNode<span class="token operator">*</span> p <span class="token operator">=</span> L<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>p <span class="token operator">&amp;&amp;</span> p<span class="token operator">-&gt;</span>data <span class="token operator">!=</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
      j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token keyword">return</span> j<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E=s("ul",null,[s("li",null,[s("p",null,"\u63D2\u5165\u7ED3\u70B9\u64CD\u4F5C"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n(" \uFF0C\u5F00\u9500\u4E3B\u8981\u5728\u67E5\u627E\u7B2Ci-1\u4E2A\u5143\u7D20")])])])],-1),j=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>Status <span class="token function">ListInsert_L</span><span class="token punctuation">(</span>LinkList<span class="token operator">&amp;</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  LNode<span class="token operator">*</span> p <span class="token operator">=</span> L<span class="token punctuation">;</span>
  LNode<span class="token operator">*</span> s<span class="token punctuation">;</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    j<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">||</span> j <span class="token operator">&gt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> ERROR<span class="token punctuation">;</span>
  s <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span>
  s<span class="token operator">-&gt;</span>data <span class="token operator">=</span> e<span class="token punctuation">;</span>
  s<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
  p<span class="token operator">-&gt;</span>next <span class="token operator">=</span> s<span class="token punctuation">;</span>
  <span class="token keyword">return</span> OK<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D=s("ul",null,[s("li",null,[s("p",null,"\u5220\u9664\u7ED3\u70B9\u64CD\u4F5C"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),T=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">bool</span> <span class="token function">ListDelete_L</span><span class="token punctuation">(</span>LinkList<span class="token operator">&amp;</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType <span class="token operator">&amp;</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  LNode<span class="token operator">*</span> p <span class="token operator">=</span> L<span class="token punctuation">;</span>
  LNode<span class="token operator">*</span> q <span class="token operator">=</span> <span class="token keyword">new</span> LNode<span class="token punctuation">;</span>
  <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>next <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    j<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>next<span class="token punctuation">)</span> <span class="token operator">||</span> j <span class="token operator">&gt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    q<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
  e <span class="token operator">=</span> q<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> q<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6C42\u8868\u957F\u64CD\u4F5C</li></ul><h3 id="\u53CC\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u53CC\u94FE\u8868" aria-hidden="true">#</a> \u53CC\u94FE\u8868</h3><ul><li>\u7ED3\u70B9\u7C7B\u578B\u5B9A\u4E49</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">DuLNode</span><span class="token punctuation">{</span>
  Elemtype data<span class="token punctuation">;</span>
  <span class="token keyword">struct</span> <span class="token class-name">DuLNode</span> <span class="token operator">*</span>prior<span class="token punctuation">,</span><span class="token operator">*</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>DuLNode<span class="token punctuation">,</span> <span class="token operator">*</span>DuLinkList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),S=s("ul",null,[s("li",null,[s("p",null,"\u53CC\u94FE\u8868\u7684\u63D2\u5165\u64CD\u4F5C"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),q=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">ListInsert_DuL</span><span class="token punctuation">(</span>DuLinkList <span class="token operator">&amp;</span>L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    DuLNode<span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token operator">*</span>s<span class="token punctuation">;</span>
    <span class="token comment">//\u5728\u5E26\u5934\u7ED3\u70B9\u7684\u53CC\u5411\u5FAA\u73AF\u94FE\u8868L\u4E2D\u7B2Ci\u4E2A\u4F4D\u7F6E\u4E4B\u524D\u63D2\u5165\u5143\u7D20e</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token function">GetElemP_DuL</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> ERROR<span class="token punctuation">;</span>

    s <span class="token operator">=</span> <span class="token keyword">new</span> DuLNode<span class="token punctuation">;</span>
    s<span class="token operator">-&gt;</span>data <span class="token operator">=</span> e<span class="token punctuation">;</span>

    s<span class="token operator">-&gt;</span>prior <span class="token operator">=</span> p<span class="token operator">-&gt;</span>prior<span class="token punctuation">;</span>
    p<span class="token operator">-&gt;</span>prior<span class="token operator">-&gt;</span>next <span class="token operator">=</span> s<span class="token punctuation">;</span>
    s<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token punctuation">;</span>
    p<span class="token operator">-&gt;</span>prior <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token keyword">return</span> OK<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token comment">// ListInsert_DuL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I=s("ul",null,[s("li",null,[s("p",null,"\u53CC\u94FE\u8868\u7684\u5220\u9664\u64CD\u4F5C"),s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),R=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">ListDelete_DuL</span><span class="token punctuation">(</span>DuLinkList<span class="token operator">&amp;</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> ElemType <span class="token operator">&amp;</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    DuLNode<span class="token operator">*</span> p<span class="token punctuation">;</span>
    <span class="token comment">//\u5728\u5E26\u5934\u7ED3\u70B9\u7684\u53CC\u5411\u5FAA\u73AF\u94FE\u8868L\u4E2D\u5220\u9664\u7B2Ci\u4E2A\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DEe</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token function">GetElemP_DuL</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> ERROR<span class="token punctuation">;</span>
    e <span class="token operator">=</span> p<span class="token operator">-&gt;</span>data<span class="token punctuation">;</span>
    p<span class="token operator">-&gt;</span>prior<span class="token operator">-&gt;</span>next <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    p<span class="token operator">-&gt;</span>next<span class="token operator">-&gt;</span>prior <span class="token operator">=</span> p<span class="token operator">-&gt;</span>prior<span class="token punctuation">;</span>
    <span class="token keyword">delete</span> p<span class="token punctuation">;</span>
    <span class="token keyword">return</span> OK<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token comment">//ListDelete_DuL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5FAA\u73AF\u94FE\u8868</p><ul><li>\u5FAA\u73AF\u5355\u94FE\u8868</li><li>\u5FAA\u73AF\u53CC\u94FE\u8868</li></ul></li><li><p>\u9759\u6001\u94FE\u8868</p><ul><li>\u7ED3\u70B9\u7C7B\u578B\u5B9A\u4E49</li></ul></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MaxSize</span> <span class="token expression"><span class="token number">100</span></span></span>
typydef <span class="token keyword">struct</span><span class="token punctuation">{</span>
	ElemType data<span class="token punctuation">;</span>
	<span class="token keyword">int</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>SlinkList<span class="token punctuation">[</span>MaxSize<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u987A\u5E8F\u8868\u548C\u94FE\u8868\u7684\u6BD4\u8F83</p><ul><li>\u5B58\u50A8\uFF08\u8BFB\u5199\uFF09\u65B9\u5F0F</li><li>\u903B\u8F91\u7ED3\u6784\u4E0E\u7269\u7406\u7ED3\u6784</li><li>\u67E5\u627E\u3001\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C</li><li>\u7A7A\u95F4\u5206\u914D</li><li>\u5728\u5B9E\u9645\u5E94\u7528\u4E2D\u5E94\u8BE5\u600E\u6837\u9009\u53D6\u5B58\u50A8\u7ED3\u6784\u5462\uFF1F <ul><li>\u57FA\u4E8E\u5B58\u50A8\u7684\u8003\u8651</li><li>\u57FA\u4E8E\u8FD0\u7B97\u7684\u8003\u8651</li><li>\u57FA\u4E8E\u73AF\u5883\u7684\u8003\u8651</li></ul></li></ul></li></ul><h3 id="\u4E60\u9898-1" tabindex="-1"><a class="header-anchor" href="#\u4E60\u9898-1" aria-hidden="true">#</a> \u4E60\u9898</h3>`,5),C=s("ul",null,[s("li",null,[n("7 \u7ED9\u5B9A\u6709n\u4E2A\u5143\u7D20\u7684\u4E00\u7EF4\u6570\u7EC4\uFF0C\u5EFA\u7ACB\u4E00\u4E2A\u6709\u5E8F\u5355\u94FE\u8868\u7684\u6700\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6\u662F?\u2192$$O(n\\log_2n)$$ \u5148\u5EFA\u7ACB\u518D\u6392\u5E8F\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u662F"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"n"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mclose"},")")])])]),n("\uFF1B \u5148\u6392\u5E8F\u518D\u5EFA\u7ACB\uFF0C\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("msub",null,[s("mrow",null,[s("mi",null,"log"),s("mo",null,"\u2061")]),s("mn",null,"2")]),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n\\log_2n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.207em"}},[s("span",{style:{top:"-2.4559em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2441em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n("\uFF0C\u5EFA\u7ACB\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,"15\u30102016\u3011"),s("li",null,"21 \u4E00\u4E2A\u94FE\u8868\u6700\u5E38\u7528\u7684\u64CD\u4F5C\u662F\u5728\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E4B\u540E\u63D2\u5165\u4E00\u4E2A\u5143\u7D20\u548C\u5220\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u9009\u7528\uFF1F\u6700\u8282\u7701\u65F6\u95F4 A \u4E0D\u5E26\u5934\u7ED3\u70B9\u7684\u5355\u5FAA\u73AF\u94FE\u8868 B \u53CC\u94FE\u8868 C \u4E0D\u5E26\u5934\u7ED3\u70B9\u4E14\u6709\u5C3E\u6307\u9488\u7684\u5355\u5FAA\u73AF\u94FE\u8868 D \u5355\u94FE\u8868\u2192C"),s("li",null,"23\u30102016\u3011"),s("li",null,"25 \u67D0\u7EBF\u6027\u8868\u7528\u5E26\u5934\u7ED3\u70B9\u7684\u5FAA\u73AF\u5355\u94FE\u8868\u5B58\u50A8\uFF0C\u5934\u6307\u9488\u4E3Ahead\uFF0C\u5F53head->next->next=head \u6210\u7ACB\u65F6\uFF0C\u7EBF\u6027\u8868\u957F\u5EA6\u53EF\u80FD\u662F\uFF1F\u21920\u6216\u80051"),s("li",null,"\u7EFC\u5408\u989821\u30102009\u3011\u5DF2\u77E5\u4E00\u4E2A\u55F2\u6709\u8868\u5934\u7ED3\u70B9\u7684\u5355\u94FE\u8868\uFF0C\u7ED3\u70B9\u7ED3\u6784\u4E3Adata|link \u5047\u8BBE\u8BE5\u94FE\u8868\u53EA\u7ED9\u51FA\u4E86\u5934\u6307\u9488list\u3002\u5728\u4E0D\u6539\u53D8\u94FE\u8868\u7684\u524D\u63D0\u4E0B\uFF0C\u8BF7\u8BBE\u8BA1\u4E00\u4E2A\u5C3D\u53EF\u80FD\u9AD8\u6548\u7684\u7B97\u6CD5\uFF0C\u67E5\u627E\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u7ED3\u70B9\uFF08k\u4E3A\u6B63\u6574\u6570\uFF09\u3002\u82E5\u67E5\u627E\u6210\u529F\uFF0C\u7B97\u6CD5\u8F93\u51FA\u8BE5\u7ED3\u70B9\u7684data\u57DF\u7684\u503C\uFF0C\u5E76\u8FD4\u56DE1\uFF1B\u5426\u5219\uFF0C\u53EA\u8FD4\u56DE0\u3002\u8981\u6C42\uFF1A \u2460 \u63CF\u8FF0\u7B97\u6CD5\u7684\u57FA\u672C\u8BBE\u8BA1\u601D\u60F3 \u2461 \u63CF\u8FF0\u7B97\u6CD5\u7684\u8BE6\u7EC6\u5B9E\u73B0\u6B65\u9AA4 \u2462 \u6839\u636E\u8BBE\u8BA1\u601D\u60F3\u548C\u5B9E\u73B0\u6B65\u9AA4\uFF0C\u91C7\u7528\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u63CF\u8FF0\u7B97\u6CD5\uFF0C\u5173\u952E\u4E4B\u5904\u8BF7\u7ED9\u51FA\u7B80\u8981\u6CE8\u91CA"),s("li",null,"22\u30102012\u3011"),s("li",null,"23\u30102015\u3011"),s("li",null,"25\u30102019\u3011")],-1);function U(B,K){const t=c("ExternalLinkIcon");return l(),p("div",null,[r,s("p",null,[m,s("a",u,[d,o(t)])]),k,h,g,v,y,b,w,x,L,f,_,O,z,M,N,E,j,D,T,S,q,I,R,C])}var G=e(i,[["render",U],["__file","02.html.vue"]]);export{G as default};
